syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";


package profile.proto.v2;

option go_package = "profile/proto/v2;profile";

message User{
    string name = 1;
    string email = 2;
    string address = 3;
    string cpf = 4;
    string phone = 5;
    google.protobuf.Timestamp birthday = 6;
}

message UserResponse{
    string id = 1;
    string name = 2;
    string email = 3;
    string address = 4;
    string cpf = 5;
    string phone = 6;
    google.protobuf.Timestamp birthday = 7;
}

message ListUser{
    repeated User users = 1;
}

message UserRequest{
    string id = 1;
}

message ListUserRequest{
    repeated string id = 1;
}

service UserService {
    rpc CreateUser(User) returns (UserResponse) {
    }

    rpc FindUser(UserRequest) returns (UserResponse) {
    }

    rpc UpdateUser(User) returns (google.protobuf.Empty) {
    }

    rpc ListUsers(ListUserRequest) returns (ListUser) {
    }

    rpc DeleteUser(UserRequest) returns (google.protobuf.Empty) {
    }
}

message Account{
    string user_id = 1;
    double balance = 2;
    string agency = 3;
    string bank = 4;
}

message AccountResponse{
    string id = 1;
    string user_id = 2;
    double balance = 3;
    string agency = 4;
    string bank = 5;
}

message ListAccount{
    repeated AccountResponse account = 1;
    google.protobuf.Timestamp createdAt = 2;
    google.protobuf.Timestamp updatedAt = 3;
}

message AccountRequest{
    int64 account_id = 1;
    string user_id = 2;
}

message ListAccountRequest{
    repeated int64 account_id = 1;
}

message FindByKeyRequest{
    string key = 1;
}

service AccountService {
    rpc CreateAccount(Account) returns (AccountResponse) {
    }

    rpc FindAccount(AccountRequest) returns (AccountResponse) {
    }

    rpc UpdateAccount(Account) returns (google.protobuf.Empty) {
    }

    rpc ListAccounts(ListAccountRequest) returns (ListAccount) {
    }

    rpc DeleteAccount(AccountRequest) returns (google.protobuf.Empty){
    }

    rpc IsAccountActive(AccountRequest) returns (google.protobuf.BoolValue){
    }

    rpc FindByKey(FindByKeyRequest) returns (AccountResponse){
    }
}
enum Type {
    cpf = 0;
    phone = 1;
    email = 2;
    random = 3;

}
message Key {
    int64 account_id = 1;
    string name = 2;
    Type type = 3;
    float value = 4;
}

message KeyResponse{
    string id = 1;
    int64 account_id = 2;
    string name = 3;
    Type type = 4;
    float value = 5;
}

message ListKeyRequest{
    repeated string key_id = 1;
}
message KeyRequest{
    string key_id = 1;
    int64 account_id = 2;
}

message ListKeys{
    repeated KeyResponse keys = 1;

}
service KeysService {
    rpc CreateKey(Key) returns (KeyResponse) {
    }

    rpc UpdateKey(Key) returns (google.protobuf.Empty) {
    }

    rpc ListKey(ListKeyRequest) returns (ListKeys) {
    }

    rpc DeleteKey(KeyRequest) returns (google.protobuf.Empty){
    }
}

message PixTransaction {
    string id = 1;
    string ReceiverKey = 4;
    double amount = 5;
    google.protobuf.Timestamp hour  = 6;
    string status = 7;
    int64 account_id = 8;
}

enum Status {
    PENDING = 0;
    COMPLETED = 1;
}

message Webhook {
    WebhookAccount sender = 1;
    WebhookAccount receiver = 2;
    double amount = 3;
    Status status = 4;
}

service PixTransactionService {
    rpc SendPix(PixTransaction) returns (google.protobuf.Empty) {
    }

    rpc PixWebhook(Webhook) returns (google.protobuf.Empty) {
    }
}

message WebhookAccount {
    string name = 1;
    string agency = 2;
    string bank = 3;
}

